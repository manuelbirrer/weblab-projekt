/* Reset */

*, *::before, *::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

input, button, textarea, select {
  font: inherit;
}

/* Custom properties */

:root {
  --accent: #0d7069;
  --accent-focus: #0b564f;
  --accent-muted: #3d5d5a;
  --white: white;
  --red: #c11b10;
  --red-focus: #ad170d;
  --error-bg: #d23e3711;
  --light-font: white;
  --card-bg: #e0e0e0;
  --card-radius: .75rem;
  --input-radius: .5rem;
}

/* Global */

html {
  font-family: sans-serif;
}

body {
  background: #f1f1f1;
}

app-root {
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 100vh;
}

main {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

label {
  display: flex;
  flex-direction: column;
}

input, button, textarea, select {
  padding: .25rem .5rem;
  border-radius: var(--input-radius);
  background: var(--white);
}

input, textarea, select {
  border: 1px solid black;
}

textarea {
  resize: vertical;
}

.error {
  color: red;
}

.error-box {
  border: 1px solid var(--red);
  color: var(--red);
  border-radius: var(--input-radius);
  padding: .25rem .5rem;
  background: var(--error-bg);
}

button {
  border: none;
  color: var(--light-font);
  background: var(--accent);
}

button:hover {
  cursor: pointer;
  background: var(--accent-focus);
}

button[disabled] {
  background: var(--accent-muted);
}

button.red {
  background: var(--red);
}

button.red:hover {
  background: var(--red-focus);
}

.ng-invalid.ng-touched {
  border-color: red;
}

.container {
  width: 1200px;
  max-width: 100%;
  padding: 1rem;
}

a {
  color: black;
  text-decoration: none;
}

a:hover {
  color: var(--accent);
}

a.active {
  color: var(--accent);
}

@media (width < 500px) {
  .container {
    padding: 1rem 0 ;
  }
}
